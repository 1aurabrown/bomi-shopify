<announcement-bar class="hidden">
  {%- for block in section.blocks -%}
    <div data-block-id="{{ block.id }}" class="hidden announcement-block px-10 text-center body-md-b md:body-md pt-2 md:pt-[0.375rem] pb-[0.375rem] md:pb-1 relative bg-grey{% if forloop.index > 1%} border-t border-black/10{% endif %}" role="region" aria-label="{{ 'sections.header.announcement' | t }}" {{ block.shopify_attributes }}>
      {%- if block.settings.text != blank -%}
        {%- if block.settings.link != blank -%}
          <a href="{{ block.settings.link }}" class="focus-inset">
        {%- endif -%}
            <p>
              {{ block.settings.text | escape }}
            </p>
        {%- if block.settings.link != blank -%}
          </a>
        {%- endif -%}
      {%- endif -%}
      <button class="announcement-block__dismiss absolute right-5 top-1/2 -translate-y-1/2">{% render 'icon-close', class: 'w-2 h-2' %}</button>
    </div>
  {%- endfor -%}
</announcement-bar>

{% javascript %}

class AnnouncementBar extends HTMLElement {
  constructor() {
    super();
    this.calculateHeight = debounce(this.calculateHeight.bind(this), 100);
    this.blocks = Array.from(this.querySelectorAll("[data-block-id]"));
  }

  calculateHeight() {
    document.querySelector(':root').style.setProperty('--announcement-bar-height', this.offsetHeight + 'px');
  }

  connectedCallback() {
    const visibleBlocks = this.blocks.reduce( (acc, block) => {
      const dismissedAnnouncements = localStorage.bomiDismissedAnnouncements ? JSON.parse(localStorage.bomiDismissedAnnouncements) : [];
      const id = block.dataset.blockId
      if (dismissedAnnouncements.indexOf(id) == -1) {
        block.classList.remove('hidden')
        const dismissEl = block.querySelector('.announcement-block__dismiss');
        dismissEl.addEventListener('click', (el) => {
          dismissedAnnouncements.push(id)
          localStorage.bomiDismissedAnnouncements = JSON.stringify(dismissedAnnouncements);
          block.classList.add('hidden')
          this.calculateHeight();
        })
        acc.push(block)
      }
      return acc
    }, [])

    if (visibleBlocks.length > 0) {
      this.classList.remove('hidden')
    }

    this.calculateHeight();
    window.addEventListener('resize', this.calculateHeight);
  }


  disconnectedCallback() {
    window.removeEventListener('resize', this.calculateHeight)
  }
}

customElements.define('announcement-bar', AnnouncementBar);

{% endjavascript %}

{% schema %}
{
  "name": "t:sections.announcement-bar.name",
  "max_blocks": 12,
  "class": "z-40",
  "blocks": [
    {
      "type": "announcement",
      "name": "t:sections.announcement-bar.blocks.announcement.name",
      "settings": [
        {
          "type": "text",
          "id": "text",
          "default": "Welcome to our store",
          "label": "t:sections.announcement-bar.blocks.announcement.settings.text.label"
        },
        {
          "type": "url",
          "id": "link",
          "label": "t:sections.announcement-bar.blocks.announcement.settings.link.label"
        }
      ]
    }
  ],
  "default": {
    "blocks": [
      {
        "type": "announcement"
      }
    ]
  }
}
{% endschema %}
